To configure Spring JDBC with JdbcTemplate, you need to set up the DataSource and JdbcTemplate beans in your Spring application context.

1. Data Source Configuration (DataSource bean):
First, you need to define a DataSource bean that provides the database connection. This example uses Apache DBCP (Database Connection Pooling) for the DataSource.

applicationContext.xml:

=>XML code:

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- DataSource bean -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/mydatabase"/>
        <property name="username" value="root"/>
        <property name="password" value="password"/>
    </bean>

    <!-- JdbcTemplate bean -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>

2. JdbcTemplate Configuration:
The JdbcTemplate bean is defined in  DataSource.